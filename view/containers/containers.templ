package containers

import (
	"github.com/docker/docker/api/types"
	"strconv"
	"fmt"
	"github.com/RadeJR/itcontainers/view/pages"
	"time"
)

templ ShowContainer(container types.Container) {
	<tr>
		<td class="border-b border-gray-200 bg-white px-5 py-5 text-sm">
			<p class="whitespace-no-wrap">{ container.ID[:10] }</p>
		</td>
		<td class="border-b border-gray-200 bg-white px-5 py-5 text-sm">
			<p class="whitespace-no-wrap">{ container.Image }</p>
		</td>
		<td class="border-b border-gray-200 bg-white px-5 py-5 text-sm">
			<p class="whitespace-no-wrap">{ container.Names[0] }</p>
		</td>
		<td class="border-b border-gray-200 bg-white px-5 py-5 text-sm">
			<p class="whitespace-no-wrap">
				for i := 0; i<len(container.Ports); i++ {
					{ strconv.FormatUint(uint64(container.Ports[i].PrivatePort),10) } { "->" } { strconv.FormatUint(uint64(container.Ports[i].PublicPort),10)+"; " }
				}
			</p>
		</td>
		<td class="border-b border-gray-200 bg-white px-5 py-5 text-sm">
			<span class={ "rounded-full bg-green-200 px-3 py-1 text-xs font-semibold text-green-900", templ.KV("bg-red-300", container.State == "exited") }>{ container.State }</span>
		</td>
		<td class="border-b border-gray-200 bg-white px-5 py-5 text-sm">
			<p class="whitespace-no-wrap">{ time.Unix(container.Created, 0).Format("02 Jan 06 15:04") }</p>
		</td>
		<td class="border-b border-gray-200 bg-white px-5 py-5 text-sm">
			<p class="whitespace-no-wrap"><a href={ templ.SafeURL("/containers/edit/" + container.ID) }>Edit</a></p>
			<p class="whitespace-no-wrap"><a hx-get={ "/containers/stop/" + container.ID } hx-swap="innerHTML" hx-target="#content">Stop</a></p>
		</td>
	</tr>
}

templ ContainersPage (containers []types.Container, userRole string) {
	@pages.Containers(userRole) {
		<div class="mx-auto px-4 py-8 sm:px-8">
			<div class="flex items-center justify-between pb-6">
				<div>
					<h2 class="font-semibold text-gray-700">Containers</h2>
					<span class="text-xs text-gray-500">View containers</span>
				</div>
				<div class="ml-10 space-x-8 lg:ml-40">
					<button class="flex items-center gap-2 rounded-md bg-gray-900 px-4 py-2 text-sm font-semibold text-white focus:outline-none focus:ring hover:bg-blue-700" hx-get="/containers/create" hx-swap="innerHTML" hx-target="#content">
						+
					</button>
				</div>
			</div>
			<div class="overflow-y-hidden rounded-lg border">
				<div class="overflow-x-auto">
					<table class="w-full">
						<thead>
							<tr class="bg-gray-900 text-left text-xs font-semibold uppercase tracking-widest text-white">
								<th class="px-5 py-3">ID</th>
								<th class="px-5 py-3">Image</th>
								<th class="px-5 py-3">Name</th>
								<th class="px-5 py-3">Ports</th>
								<th class="px-5 py-3">State</th>
								<th class="px-5 py-3">Created at</th>
								<th class="px-5 py-3">Controls</th>
							</tr>
						</thead>
						<tbody class="text-gray-500">
							for _, container := range containers {
								@ShowContainer(container)
							}
						</tbody>
					</table>
				</div>
				<div class="flex flex-col items-center border-t bg-white px-5 py-5 sm:flex-row sm:justify-between">
					<span class="text-xs text-gray-600 sm:text-sm">Showing 1 to 10 of { fmt.Sprint(len(containers)) } Entries </span>
					<div class="mt-2 inline-flex sm:mt-0">
						<button class="mr-2 h-12 w-12 rounded-full border text-sm font-semibold text-gray-600 transition duration-150 hover:bg-gray-100">Prev</button>
						<button class="h-12 w-12 rounded-full border text-sm font-semibold text-gray-600 transition duration-150 hover:bg-gray-100">Next</button>
					</div>
				</div>
			</div>
		</div>
	}
}
