package components

import "fmt"

func prevButtonClasses(page int) string {
	classes := "mr-2 h-12 w-12 rounded-full border text-sm font-semibold text-gray-600 transition duration-150"
	if page > 1 {
		return classes + " hover:bg-gray-100"
	} else {
		return classes + " bg-gray-200"
	}
}

func nextButtonClasses(page, size, total int) string {
	classes := "mr-2 h-12 w-12 rounded-full border text-sm font-semibold text-gray-600 transition duration-150"
	if (size*(page-1))+size < total {
		return classes + " hover:bg-gray-100"
	} else {
		return classes + " bg-gray-200"
	}
}

templ Pagination(page, size, total int, endpoint string) {
	<div class="flex flex-col items-center border-t bg-white px-5 py-5 sm:flex-row sm:justify-between rounded-b-lg">
		<span class="text-xs text-gray-600 sm:text-sm">
			Showing { fmt.Sprint(size*(page-1)) } to { 
		fmt.Sprint((size*(page-1))+size) } of { fmt.Sprint(total) } Entries
		</span>
		<div class="mt-2 inline-flex sm:mt-0">
			<button
				class={ prevButtonClasses(page) }
				hx-get={ endpoint + "?page=" + fmt.Sprint(page-1) }
				hx-push-url="true"
				if page==1 {
					disabled
				}
			>Prev</button>
			<button
				class={ nextButtonClasses(page, size, total) }
				hx-get={ endpoint + "?page=" + fmt.Sprint(page+1) }
				hx-push-url="true"
				if (size*(page-1))+size>= total {
					disabled
				}
			>Next</button>
		</div>
	</div>
}
